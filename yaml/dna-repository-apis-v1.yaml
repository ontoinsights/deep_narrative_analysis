openapi: 3.0.3
info:
  title: Deep Narrative Analysis RESTful APIs v1.2
  description: |-
    Defines the interface for ingesting, retrieving, editing and deleting 
    narratives and news articles using the Deep Narrative Analysis (DNA) 
    infrastructure.
    
    To use the API and for more information, refer to the README.txt file in 
    the [GitHub DNA repository](https://github.com/ontoinsights/deep_narrative_analysis).
    Note that this implementation assumes storage of graphs in a Stardog database.
    Environment variables define the location of that database (typically a 
    Stardog Cloud instance), and a username/password to access it (specially, 
    STARDOG_ENDPOINT, STARDOG_USER and STARDOG_PASSWORD). In addition,
    GEONAMES_ID and OPENAI_API_KEY environment variables MUST be set. If the 
    environment variables are not defined, DNA will not function.
    
    The following is a typical workflow after starting the DNA application:
    - Create a new repository by POSTing to
      /dna/v1/repositories?repository=repo_name, or an existing repository may 
      be reused
    - OR -
    - Use an existing repository (existing repositories are listed by 
      GETting /dna/v1/repositories)
    - THEN - 
    - Ingest a narrative or news article by POSTing its metadata 
      and text to 
      /dna/v1/repositories/narrative-texts?repository=repo_name 
      with a request body holding the metadata details and full text
      (the response body will contain the narrative's id as stored in
      the repository)
      - Only English text articles are currently processed
      - Automated ingest is possible but many sites require subscriptions
        which are not currently supported 
    - OR - 
    - Determine which (already ingested) articles or narratives 
      are of interest by GETting 
      /dna/v1/repositories/narratives?repository=repo_name
      (the response body will contain a list of all narratives/articles
      and their metadata)
    - THEN -
    - Select articles to be analyzed/compared
      - Note that these APIs are currently under development
      
    To review the specific triples in a narrative or article, GET 
    /dna/v1/repositories/narratives/graphs?repository=repo_name&narrativeId=narr_id
    (the response body will contain a list of all triples).
    
    To update the triples or to add the narrative/article to another
    repository, POST to 
    /dna/v1/repositories/narratives/graphs?repository=repo_name&narrativeId=narr_id
    where the narrativeId must be the same id if updating in the original 
    repository, or can be any UNIQUE id if posting to a new repository. Note 
    that the request body must contain the complete list of triples.
      
    GETting /dna/v1/repositories or /dna/v1/repositories/narratives
    will return a list of all DNA repositories or all narratives/articles in
    a repository, respectively.
    
    DELETEing using the /dna/v1/repositories or /dna/v1/repositories/narratives 
    APIs will remove the specified repository or narrative/article. Please use 
    these commands with caution since the results are not reversible.
  contact:
    email: andrea@ontoinsights.com
  license:
    name: Creative Commons Attribution 4.0 International Public License
    url: https://creativecommons.org/licenses/by/4.0/legalcode
  version: '1.15'
paths:
  /dna/v1/repositories:
    get:
      summary: >-
        Get a list of all repositories
      description: >-
        Return the names and creation dates of all the DNA repositories 
        of the specified database server
      operationId: getRepositories
      responses:
        '200':
          description: Successful operation (may be empty)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoryList' 
        '400':
          description: Repository list - Missing or invalid content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'  
        '500':
          description: Internal processing error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'  
    post:
      summary: >-
        Create a new repository
      description: >-
        Create a new repository with the specified name
      parameters:
        - $ref: '#/components/parameters/repository'
      operationId: createRepository
      responses:
        '201':
          description: Repository created
          content:
            application/json:
              schema:
                type: object
                properties:
                  created:
                    type: string
                    example: dna
        '400':
          description: Repository creation - Missing or invalid content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest' 
        '409':
          description: Repository already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Repository with the name, foo, already exists at http://example.com
        '500':
          description: Internal processing error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'  
    delete:
      summary: Delete a repository
      description: >-
        Delete the specified repository 
      parameters:
        - $ref: '#/components/parameters/repository'
      operationId: deleteRepository
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  deleted:
                    type: string
                    example: dna
        '400':
          description: Repository deletion - Missing or invalid content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'  
        '404':
          description: Repository deletion - Repository not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Repository with the name, foo, was not found at http://example.com
        '500':
          description: Internal processing error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'  
  /dna/v1/repositories/narratives:
    get:
      summary: >-
        Get a list of all narratives or articles (and their meta-data) 
        in the specified repository
      description: >-
        Return the meta-data for all narratives or articles in the 
        specified repository
      parameters:
        - $ref: '#/components/parameters/repository'
      operationId: getNarratives
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NarrativeList' 
        '400':
          description: Narrative list - Missing or invalid content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest' 
        '404':
          description: Narrative list - Repository not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Repository with the name, foo, was not found at http://example.com
        '500':
          description: Internal processing error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'  
    post:
      summary: Ingest a news article to the specified repository
      description: >-
        Process a narrative or article based on details in the request body, 
        and ingest it to the specified repository. Note that the full
        text of the narrative/article must be specified in the body's "text"
        field. Also, the "title" and "source" details must be provided.
      parameters:
        - $ref: '#/components/parameters/repository'
        - $ref: '#/components/parameters/sentences'
      operationId: ingestNarrative
      requestBody:
        description: Ingest narrative
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InputNarrative' 
        required: true
      responses:
        '201':
          description: Information graph created
          content:
            application/json:
              schema:
                type: object
                properties:
                  repository:
                    type: string
                    example: foo
                  narrativeDetails:
                    $ref: '#/components/schemas/NarrativeDetails'
        '400':
          description: Narrative ingest - Missing or invalid content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'  
        '404':
          description: Narrative ingest - Repository not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Repository with the name, foo, was not found at http://example.com
        '500':
          description: Internal processing error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'  
    delete:
      summary: Delete a narrative or news article
      description: >-
        Delete the specified narrative or news article in the 
        specified repository 
      parameters:
        - $ref: '#/components/parameters/repository'
        - $ref: '#/components/parameters/narrativeId'
      operationId: deleteText
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  repository:
                    type: string
                    example: dna
                  deleted:
                    type: string
                    example: 73cf1b89
        '400':
          description: Narrative delete - Missing or invalid content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'  
        '404':
          description: Narrative delete - Repository or narrative not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: >-
                      Narrative with the id, 73cf1b89, was not found in the
                      repository, foo, at http://example.com
        '500':
          description: Internal processing error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'  
  /dna/v1/repositories/narratives/graphs:
    get:
      summary: Get a narrative's or news article's information graph
      description: >-
        Get the information graph for the narrative or article with 
        the specified id in the repository 
        server
      operationId: getGraph
      parameters:
        - $ref: '#/components/parameters/repository'
        - $ref: '#/components/parameters/narrativeId'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfoGraphDetails'  
        '400':
          description: Graph retrieval - Missing or invalid content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'  
        '404':
          description: Graph retrieval - Repository or narrative not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: >-
                      Narrative with the id, 73cf1b89, was not found in foo at http://example.com
        '500':
          description: Internal processing error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'  
    put:
      summary: Update a narrative's or news article's information graph
      description: >-
        Update the information graph for the specific narrative or article
        in the repository. At this time, the entire graph must be replaced. 
        In the future, it will be possible to update select triples.
      operationId: updateGraph
      parameters:
        - $ref: '#/components/parameters/repository'
        - $ref: '#/components/parameters/narrativeId'
      requestBody:
        description: Updated narrative triples
        content:
          application/json:
            schema:
              type: object
              properties:
                triples:
                  type: array
                  items:
                    type: string
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  repository:
                    type: string
                    example: dna
                  narrativeId:
                    type: string
                    example: 73cf1b89
                  processed:
                    type: string
                    format: date-time
                    example: 2022-09-09T12:41:00Z
                  numberOfTriples:
                    type: integer
                    example: 500
        '400':
          description: Graph update - Missing or invalid content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequest'  
        '404':
          description: Graph update - Repository or narrative not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: >-
                      Narrative with the id, 73cf1b89, was not found in foo at http://example.com
        '500':
          description: Internal processing error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalError'
components:
  parameters:
    narrativeId:
      name: narrativeId
      in: query
      description: UUID for a narrative in the repository
      required: true
      schema:
        type: string
        format: uuid
        example: 73cf1b89
    sentences:
      name: sentences
      in: query
      description: >
        Number of sentences of the narrative/article to ingest.
        If omitted, up to 100 sentences are ingested, but the
        processing time is lengthy. (This is being addressed
        by current development.)
      required: false
      schema:
        type: integer
        example: 10
    repository:
      name: repository
      in: query
      description: >-
        Name of the repository holding narratives
      required: true
      schema:
        type: string
  schemas:
    BadRequest:
      type: object
      properties:
        error:
          type: string
          enum: [ missing, invalid ]
          example: missing
        detail:
          type: string
          example: The argument parameter, xxx, is missing
    InputNarrative:
      type: object
      properties:
        title:
            type: string
            description: Article, blog post, ... title
            example: A Narrative Title
        published:
            type: string
            description: Date/time when the text was published; May be omitted
            format: date-time
            example: 2022-07-14T17:32:28Z
        source:
            type: string
            description: >
              String identifying the source of the narrative
            example: Wall Street Journal
        url:
            type: string
            description: >-
              String identifying the online location of the article, its 
              reference in an online repository, etc.; May be omitted
            example: http://example_news.com/abc123
        text:
            type: string
            description: >-
              String holding the text of the narrative/news article
    InternalError:
      type: object
      properties:
        error:
          type: array
          items:
            type: string
            example: error details
    InfoGraphDetails:
      type: object
      properties:
        server:
          type: string
          example: http://example.com
        repository:
          type: string
          example: dna
        narrativeDetails:
          $ref: '#/components/schemas/NarrativeDetails'
        triples:
          type: array
          items:
            type: string
    NarrativeDetails:
      type: object
      properties:
        narrativeId:
          type: string
          example: 73cf1b89
        processed:
          type: string
          description: Date/time when the text was processed by DNA
          format: date-time 
          example: 2022-09-09T12:41:00Z
        numberOfTriples:
          type: integer
          description: Number of triples in the information graph
          example: 500
        numberOfSentences:
            type: integer
            description: >
              Integer indicating the total number of sentences in the text
            example: 60
        numberIngested:
            type: integer
            description: >
              Integer indicating the number of sentences ingested
            example: 10
        narrativeMetadata:
          $ref: '#/components/schemas/NarrativeMeta'
    NarrativeList:
      type: object
      properties:
        repository:
          type: string
          example: dna
        narratives:
          type: array
          items:
            $ref: '#/components/schemas/NarrativeDetails'
    NarrativeMeta:
      type: object
      properties:
        title:
            type: string
            description: Article, blog post, ... title
            example: A Narrative Title
        published:
            type: string
            description: Date/time when the text was published; May be blank
            format: date-time 
            example: 2022-07-14T17:32:28Z
        source:
            type: string
            example: Wall Street Journal
        url:
            type: string
            description: >-
              String identifying the online location of the article, its 
              reference in an online repository, etc.; May be blank
            example: http://example_news.com/abc123
    RepositoryList:
      type: array
      items:
        $ref: '#/components/schemas/RepositoryMeta'  
    RepositoryMeta:
      type: object
      properties:
        repository:
          type: string
          example: narratives1
        created:
          type: string
          format: date-time
          example: 2022-07-21T17:32:28Z
